"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.V1_NODE_TYPES = exports.TEXT_CONTAINERS = exports.CONTAINERS = exports.VOID_BLOCKS = exports.TABLE_BLOCKS = exports.LIST_ITEM_BLOCKS = exports.TOP_LEVEL_BLOCKS = void 0;
var blocks_1 = __importDefault(require("./blocks"));
var inlines_1 = __importDefault(require("./inlines"));
/**
 * Array of all top level block types.
 * Only these block types can be the direct children of the document.
 */
exports.TOP_LEVEL_BLOCKS = [
    blocks_1.default.PARAGRAPH,
    blocks_1.default.HEADING_1,
    blocks_1.default.HEADING_2,
    blocks_1.default.HEADING_3,
    blocks_1.default.HEADING_4,
    blocks_1.default.HEADING_5,
    blocks_1.default.HEADING_6,
    blocks_1.default.OL_LIST,
    blocks_1.default.UL_LIST,
    blocks_1.default.HR,
    blocks_1.default.QUOTE,
    blocks_1.default.EMBEDDED_ENTRY,
    blocks_1.default.EMBEDDED_ASSET,
    blocks_1.default.TABLE,
];
/**
 * Array of all allowed block types inside list items
 */
exports.LIST_ITEM_BLOCKS = [
    blocks_1.default.PARAGRAPH,
    blocks_1.default.HEADING_1,
    blocks_1.default.HEADING_2,
    blocks_1.default.HEADING_3,
    blocks_1.default.HEADING_4,
    blocks_1.default.HEADING_5,
    blocks_1.default.HEADING_6,
    blocks_1.default.OL_LIST,
    blocks_1.default.UL_LIST,
    blocks_1.default.HR,
    blocks_1.default.QUOTE,
    blocks_1.default.EMBEDDED_ENTRY,
    blocks_1.default.EMBEDDED_ASSET,
];
exports.TABLE_BLOCKS = [
    blocks_1.default.TABLE,
    blocks_1.default.TABLE_ROW,
    blocks_1.default.TABLE_CELL,
    blocks_1.default.TABLE_HEADER_CELL,
];
/**
 * Array of all void block types
 */
exports.VOID_BLOCKS = [blocks_1.default.HR, blocks_1.default.EMBEDDED_ENTRY, blocks_1.default.EMBEDDED_ASSET];
/**
 * Dictionary of all container block types, and the set block types they accept as children.
 *
 * Note: This does not include `[BLOCKS.DOCUMENT]: TOP_LEVEL_BLOCKS`
 */
exports.CONTAINERS = (_a = {},
    _a[blocks_1.default.OL_LIST] = [blocks_1.default.LIST_ITEM],
    _a[blocks_1.default.UL_LIST] = [blocks_1.default.LIST_ITEM],
    _a[blocks_1.default.LIST_ITEM] = exports.LIST_ITEM_BLOCKS,
    _a[blocks_1.default.QUOTE] = [blocks_1.default.PARAGRAPH],
    _a[blocks_1.default.TABLE] = [blocks_1.default.TABLE_ROW],
    _a[blocks_1.default.TABLE_ROW] = [blocks_1.default.TABLE_CELL, blocks_1.default.TABLE_HEADER_CELL],
    _a[blocks_1.default.TABLE_CELL] = [blocks_1.default.PARAGRAPH],
    _a[blocks_1.default.TABLE_HEADER_CELL] = [blocks_1.default.PARAGRAPH],
    _a);
/**
 * Array of all block types that may contain text and inline nodes.
 */
exports.TEXT_CONTAINERS = [
    blocks_1.default.PARAGRAPH,
    blocks_1.default.HEADING_1,
    blocks_1.default.HEADING_2,
    blocks_1.default.HEADING_3,
    blocks_1.default.HEADING_4,
    blocks_1.default.HEADING_5,
    blocks_1.default.HEADING_6,
];
/**
 * Node types before `tables` release.
 */
exports.V1_NODE_TYPES = [
    blocks_1.default.DOCUMENT,
    blocks_1.default.PARAGRAPH,
    blocks_1.default.HEADING_1,
    blocks_1.default.HEADING_2,
    blocks_1.default.HEADING_3,
    blocks_1.default.HEADING_4,
    blocks_1.default.HEADING_5,
    blocks_1.default.HEADING_6,
    blocks_1.default.OL_LIST,
    blocks_1.default.UL_LIST,
    blocks_1.default.LIST_ITEM,
    blocks_1.default.HR,
    blocks_1.default.QUOTE,
    blocks_1.default.EMBEDDED_ENTRY,
    blocks_1.default.EMBEDDED_ASSET,
    inlines_1.default.HYPERLINK,
    inlines_1.default.ENTRY_HYPERLINK,
    inlines_1.default.ASSET_HYPERLINK,
    inlines_1.default.EMBEDDED_ENTRY,
    'text',
];
//# sourceMappingURL=schemaConstraints.js.map